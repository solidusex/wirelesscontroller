/* * Copyright (c) 2011 by Solidus * This file is part of Arsenal library tools source code. * * Permission to use, copy, modify, distribute and sell this software * and its documentation for any purpose is hereby granted without fee, * provided that the above copyright notice appear in all copies and * that both that copyright notice and this permission notice appear * in supporting documentation.It is provided "as is" without express  * or implied warranty. * */#import "SplitViewDelegate.h"/*************************************VerticalSplitViewDelegate*************************/@implementation VerticalSplitViewDelegate-(id)init{		//NSLog(@"On SplitViewDelegate::init");		self = [super init];				if(self)		{		}		return (self);		}- (CGFloat)splitView:(NSSplitView *)splitView constrainMinCoordinate:(CGFloat)proposedMinimumPosition ofSubviewAt:(NSInteger)dividerIndex;{		//NSLog(@"%@:%s proposedMinimum: %f dividerIndex = %d",[self class], _cmd, proposedMinimumPosition, dividerIndex);		return proposedMinimumPosition + 2;}- (CGFloat)splitView:(NSSplitView *)splitView constrainMaxCoordinate:(CGFloat)proposedMaximumPosition ofSubviewAt:(NSInteger)dividerIndex;{		//NSLog(@"%@:%s proposedMaximum: %f dividerIndex = %d",[self class], _cmd, proposedMaximumPosition, dividerIndex);		return proposedMaximumPosition - 1;}- (BOOL)splitView:(NSSplitView *)splitView shouldHideDividerAtIndex:(NSInteger)dividerIndex;{		//NSLog(@"%@:%s returning YES",[self class], _cmd);		return NO;}- (BOOL)splitView:(NSSplitView *)splitView canCollapseSubview:(NSView *)subview;{		NSView* leftView = [[splitView subviews] objectAtIndex:0];		//NSLog(@"%@:%s returning %@",[self class], _cmd, ([subview isEqual:leftView])?@"YES":@"NO");		BOOL ret =  ([subview isEqual:leftView]);				return ret;}- (BOOL)splitView:(NSSplitView *)splitView shouldCollapseSubview:(NSView *)subview forDoubleClickOnDividerAtIndex:(NSInteger)dividerIndex;{		NSView* leftView = [[splitView subviews] objectAtIndex:0];		//NSLog(@"%@:%s returning %@",[self class], _cmd, ([subview isEqual:leftView])?@"YES":@"NO");		return ([subview isEqual:leftView]);}@end/*************************************HorizontalSplitViewDelegate*************************/@implementation HorizontalSplitViewDelegate-(id)init{		//NSLog(@"On HorizontalSplitViewDelegate::init");		self = [super init];				if(self)		{		}		return (self);		}- (CGFloat)splitView:(NSSplitView *)splitView constrainMinCoordinate:(CGFloat)proposedMinimumPosition ofSubviewAt:(NSInteger)dividerIndex;{		//NSLog(@"%@:%s proposedMinimum: %f dividerIndex = %d",[self class], _cmd, proposedMinimumPosition, dividerIndex);		return proposedMinimumPosition + 2;}- (CGFloat)splitView:(NSSplitView *)splitView constrainMaxCoordinate:(CGFloat)proposedMaximumPosition ofSubviewAt:(NSInteger)dividerIndex;{		//NSLog(@"%@:%s proposedMaximum: %f dividerIndex = %d",[self class], _cmd, proposedMaximumPosition, dividerIndex);		return proposedMaximumPosition - 1;}- (BOOL)splitView:(NSSplitView *)splitView shouldHideDividerAtIndex:(NSInteger)dividerIndex;{		//NSLog(@"%@:%s returning YES",[self class], _cmd);		return NO;}- (BOOL)splitView:(NSSplitView *)splitView canCollapseSubview:(NSView *)subview;{		NSView* bottomView = [[splitView subviews] objectAtIndex:1];		//NSLog(@"%@:%s returning %@",[self class], _cmd, ([subview isEqual:bottomView])?@"YES":@"NO");		BOOL ret =  ([subview isEqual:bottomView]);				return ret;}- (BOOL)splitView:(NSSplitView *)splitView shouldCollapseSubview:(NSView *)subview forDoubleClickOnDividerAtIndex:(NSInteger)dividerIndex;{		NSView* bottomView = [[splitView subviews] objectAtIndex:1];		//NSLog(@"%@:%s returning %@",[self class], _cmd, ([subview isEqual:bottomView])?@"YES":@"NO");		return ([subview isEqual:bottomView]);}@end